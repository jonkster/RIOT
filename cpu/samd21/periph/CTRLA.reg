i2c.c:    I2CSercom->CTRLA.reg = SERCOM_I2CS_CTRLA_SWRST;
i2c.c:    while(I2CSercom->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK) {}
i2c.c:    if (I2CSercom->CTRLA.reg & SERCOM_I2CM_CTRLA_ENABLE) {
i2c.c:    if (I2CSercom->CTRLA.reg & SERCOM_I2CM_CTRLA_SWRST) {
i2c.c:    while(I2CSercom->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK) {}
i2c.c:    I2CSercom->CTRLA.reg = SERCOM_I2CM_CTRLA_MODE_I2C_MASTER;
i2c.c:    I2CSercom->CTRLB.reg = SERCOM_I2CM_CTRLB_SMEN;
i2c.c:                I2CSercom->CTRLA.reg |= SERCOM_I2CM_CTRLA_SPEED(0);
i2c.c:                I2CSercom->BAUD.reg = SERCOM_I2CM_BAUD_BAUD(tmp_baud);
i2c.c:                I2CSercom->CTRLA.reg |= SERCOM_I2CM_CTRLA_SPEED(0);
i2c.c:                I2CSercom->BAUD.reg = SERCOM_I2CM_BAUD_BAUD(tmp_baud);
i2c.c:                I2CSercom->CTRLA.reg |= SERCOM_I2CM_CTRLA_SPEED(2);
i2c.c:                I2CSercom->BAUD.reg =SERCOM_I2CM_BAUD_HSBAUD(tmp_baud);
i2c.c:    while (!(I2CSercom->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
i2c.c:            I2CSercom->STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(1);
